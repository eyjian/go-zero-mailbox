// Written by yijian on 2024/01/20
syntax = "proto3";
package mooon_mailbox;

// 当 protoc-gen-go 版本大于 1.4.0 时需加上 go_package，否则编译报错“unable to determine Go import path for”
option go_package = "./mooon-mailbox";

// 信件
message Letter {
  string letter_id = 1; // 信件 ID
  string letter_body = 2; // 信件内容
  int64 deliver_time = 3; // 投递时间
  int64 arrival_time = 4; // 到达时间
}

// 投递消息
message DeliverMessageReq {
  string recipient = 1; // 收件人
  string letter_body = 2; // 信件内容
}

message DeliverMessageResp {
  string recipient = 1; // 收件人
}

// 列出信件
message ListMessagesReq {
  enum ListAction {
    LA_ALL = 0; // 所有信件
    LA_ONLY_UNREAD = 1; // 仅未读信件
    LA_ONLY_READ = 2; // 仅已读信件
  }

  string recipient = 1; // 收件人
  string page_start = 2; // 起始页，值为空表示首页
  string page_size = 3; // 页大小，默认为 10
  ListAction list_action = 4; // 列出动作
}

message ListMessagesResp {
  string recipient = 1; // 收件人ListAction
  repeated Letter letters = 2; // 信件列表
}

// 标记为已读
message MarkAsReadReq {
  string recipient = 1; // 收件人
  repeated string letter_id_list = 2; // 信件 ID
}

message MarkAsReadResp {
  string recipient = 1; // 收件人
}

// 删除信件
message DeleteLetterReq {
  string recipient = 1; // 收件人
  repeated string letter_id_list = 2; // 信件 ID
}

message DeleteLetterResp {
  string recipient = 1; // 收件人
}

// 信箱服务
service MooonMailbox {
  rpc deliver_message(DeliverMessageReq) returns(DeliverMessageResp);
  rpc list_messages(ListMessagesReq) returns (ListMessagesResp);
  rpc mark_as_read(MarkAsReadReq) returns (MarkAsReadResp);
  rpc delete_letter(DeleteLetterReq) returns (DeleteLetterResp);
}
